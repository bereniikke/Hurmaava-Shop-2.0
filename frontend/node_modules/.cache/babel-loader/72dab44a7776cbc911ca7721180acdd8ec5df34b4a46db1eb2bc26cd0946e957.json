{"ast":null,"code":"/* import React, { useState } from 'react';\n\nfunction OrderForm() {\n  const [productType, setProductType] = useState('');\n  const [fabric, setFabric] = useState('');\n  const [totalPrice, setTotalPrice] = useState('');\n\n  const productTypeImageMap = {\n    '': \"./images/takki.JPG\",\n    takki: \"./images/takki.JPG\",\n    liivi: \"./images/liivi.JPG\"\n  };\n\n  const fabricImageMap = {\n    '': \"./images/takki.JPG\",\n    \"pinkit kukat\": \"./images/pinkitkukat.jpg\",\n    värikäs: \"./images/värikäs.jpg\",\n    keltainen: \"./images/keltainen.jpeg\"\n  };\n\n  const updateTotal = () => {\n    const productPrice = parseFloat(productType === 'takki' ? 100.00 : (productType === 'liivi' ? 65.00 : 0.00));\n    const fabricPrice = parseFloat(fabric === 'pinkit kukat' ? 10.00 : (fabric === 'värikäs' ? 15.00 : (fabric === 'keltainen' ? 12.00 : 0.00)));\n    const shippingPrice = 6.9;\n    const total = productPrice + fabricPrice + shippingPrice;\n\n    setTotalPrice(total.toFixed(2));\n  };\n\n  const handleProductTypeChange = (event) => {\n    const selectedProductType = event.target.value;\n    setProductType(selectedProductType);\n\n    const featuredImage = document.getElementById('featured');\n    const productTypeImagePath = productTypeImageMap[selectedProductType];\n\n    if (productTypeImagePath) {\n      featuredImage.src = productTypeImagePath;\n    }\n\n    updateTotal();\n  };\n\n  const handleFabricChange = (event) => {\n    const selectedFabric = event.target.value;\n    setFabric(selectedFabric);\n\n    const featuredImage = document.getElementById('featured');\n    let fabricImagePath = fabricImageMap[selectedFabric];\n\n    if (selectedFabric === 'oma kangas') {\n      fabricImagePath = productTypeImageMap[productType];\n    }\n\n    if (fabricImagePath) {\n      featuredImage.src = fabricImagePath;\n    }\n\n    updateTotal();\n  };\n\n  return (\n    <div className=\"order-form-container\">\n      <div id=\"product-img-container\">\n        <img id=\"featured\" src={productTypeImageMap[productType] || fabricImageMap[fabric]} alt=\"Product\" />\n      </div>\n      <div className=\"form-container\">\n        <form id=\"order-form\" action=\"/submit-order\" method=\"post\">\n          <label htmlFor=\"productType\">Tyyli:</label>\n          <select id=\"productType\" name=\"productType\" required onChange={handleProductTypeChange}>\n            <option value=\"valitse tuote\" data-price=\"0.00\">Valitse tuote</option>\n            <option value=\"takki\" data-price=\"100.00\">Takki - 100.00€</option>\n            <option value=\"liivi\" data-price=\"65.00\">Liivi - 65.00€</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"fabric\">Kangas:</label>\n          <select id=\"fabric\" name=\"fabric\" required onChange={handleFabricChange}>\n            <option value=\"valitse kangas\" data-price=\"0.00\">Valitse kangas</option>\n            <option value=\"pinkit kukat\" data-price=\"10.00\">Pinkit kukat - 10.00€</option>\n            <option value=\"värikäs\" data-price=\"15.00\">Värikäs - 15.00€</option>\n            <option value=\"keltainen\" data-price=\"12.00\">Keltainen - 12.00€</option>\n            <option value=\"oma kangas\" data-price=\"0.00\">Oma kangas - 0.00€</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"size\">Koko:</label>\n          <select id=\"size\" name=\"size\" required>\n            <option value=\"ONE SIZE\">ONE SIZE</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"phoneNumber\">Puh:</label>\n          <input type=\"tel\" id=\"phoneNumber\" name=\"phoneNumber\" required />\n          <br />\n\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" required />\n          <br />\n\n          <div className=\"total\">\n            <h4>Tilauksesi:</h4>\n            {productType !== 'valitse tuote' && (\n                <div className=\"total\">\n                    <h4>Tilauksesi:</h4>\n                    <p>Työ: {productType === 'takki' ? '100.00€' : productType === 'liivi' ? '65.00€' : '0.00€'}</p>\n                    <p>Kangas: {parseFloat(fabric === 'pinkit kukat' ? 10.00 : (fabric === 'värikäs' ? 15.00 : (fabric === 'keltainen' ? 12.00 : 0.00))).toFixed(2)}€</p>\n                    <p>Postikulut: 6.90€</p>\n                    <hr />\n                    <p>Yhteensä {totalPrice}€</p>\n                </div>\n                )}\n          </div>\n\n          <div className=\"button-container\">\n            <button type=\"submit\">Lähetä tilaus</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderForm;\n*/","map":{"version":3,"names":[],"sources":["/Users/lauraelfving/Desktop/react-shop/my-web-shop-react/frontend/src/OrderForm.js"],"sourcesContent":["/* import React, { useState } from 'react';\n\nfunction OrderForm() {\n  const [productType, setProductType] = useState('');\n  const [fabric, setFabric] = useState('');\n  const [totalPrice, setTotalPrice] = useState('');\n\n  const productTypeImageMap = {\n    '': \"./images/takki.JPG\",\n    takki: \"./images/takki.JPG\",\n    liivi: \"./images/liivi.JPG\"\n  };\n\n  const fabricImageMap = {\n    '': \"./images/takki.JPG\",\n    \"pinkit kukat\": \"./images/pinkitkukat.jpg\",\n    värikäs: \"./images/värikäs.jpg\",\n    keltainen: \"./images/keltainen.jpeg\"\n  };\n\n  const updateTotal = () => {\n    const productPrice = parseFloat(productType === 'takki' ? 100.00 : (productType === 'liivi' ? 65.00 : 0.00));\n    const fabricPrice = parseFloat(fabric === 'pinkit kukat' ? 10.00 : (fabric === 'värikäs' ? 15.00 : (fabric === 'keltainen' ? 12.00 : 0.00)));\n    const shippingPrice = 6.9;\n    const total = productPrice + fabricPrice + shippingPrice;\n\n    setTotalPrice(total.toFixed(2));\n  };\n\n  const handleProductTypeChange = (event) => {\n    const selectedProductType = event.target.value;\n    setProductType(selectedProductType);\n\n    const featuredImage = document.getElementById('featured');\n    const productTypeImagePath = productTypeImageMap[selectedProductType];\n\n    if (productTypeImagePath) {\n      featuredImage.src = productTypeImagePath;\n    }\n\n    updateTotal();\n  };\n\n  const handleFabricChange = (event) => {\n    const selectedFabric = event.target.value;\n    setFabric(selectedFabric);\n\n    const featuredImage = document.getElementById('featured');\n    let fabricImagePath = fabricImageMap[selectedFabric];\n\n    if (selectedFabric === 'oma kangas') {\n      fabricImagePath = productTypeImageMap[productType];\n    }\n\n    if (fabricImagePath) {\n      featuredImage.src = fabricImagePath;\n    }\n\n    updateTotal();\n  };\n\n  return (\n    <div className=\"order-form-container\">\n      <div id=\"product-img-container\">\n        <img id=\"featured\" src={productTypeImageMap[productType] || fabricImageMap[fabric]} alt=\"Product\" />\n      </div>\n      <div className=\"form-container\">\n        <form id=\"order-form\" action=\"/submit-order\" method=\"post\">\n          <label htmlFor=\"productType\">Tyyli:</label>\n          <select id=\"productType\" name=\"productType\" required onChange={handleProductTypeChange}>\n            <option value=\"valitse tuote\" data-price=\"0.00\">Valitse tuote</option>\n            <option value=\"takki\" data-price=\"100.00\">Takki - 100.00€</option>\n            <option value=\"liivi\" data-price=\"65.00\">Liivi - 65.00€</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"fabric\">Kangas:</label>\n          <select id=\"fabric\" name=\"fabric\" required onChange={handleFabricChange}>\n            <option value=\"valitse kangas\" data-price=\"0.00\">Valitse kangas</option>\n            <option value=\"pinkit kukat\" data-price=\"10.00\">Pinkit kukat - 10.00€</option>\n            <option value=\"värikäs\" data-price=\"15.00\">Värikäs - 15.00€</option>\n            <option value=\"keltainen\" data-price=\"12.00\">Keltainen - 12.00€</option>\n            <option value=\"oma kangas\" data-price=\"0.00\">Oma kangas - 0.00€</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"size\">Koko:</label>\n          <select id=\"size\" name=\"size\" required>\n            <option value=\"ONE SIZE\">ONE SIZE</option>\n          </select>\n          <br />\n\n          <label htmlFor=\"phoneNumber\">Puh:</label>\n          <input type=\"tel\" id=\"phoneNumber\" name=\"phoneNumber\" required />\n          <br />\n\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" required />\n          <br />\n\n          <div className=\"total\">\n            <h4>Tilauksesi:</h4>\n            {productType !== 'valitse tuote' && (\n                <div className=\"total\">\n                    <h4>Tilauksesi:</h4>\n                    <p>Työ: {productType === 'takki' ? '100.00€' : productType === 'liivi' ? '65.00€' : '0.00€'}</p>\n                    <p>Kangas: {parseFloat(fabric === 'pinkit kukat' ? 10.00 : (fabric === 'värikäs' ? 15.00 : (fabric === 'keltainen' ? 12.00 : 0.00))).toFixed(2)}€</p>\n                    <p>Postikulut: 6.90€</p>\n                    <hr />\n                    <p>Yhteensä {totalPrice}€</p>\n                </div>\n                )}\n          </div>\n\n          <div className=\"button-container\">\n            <button type=\"submit\">Lähetä tilaus</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderForm;\n*/"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}